buildscript {
	repositories {
		jcenter()
		mavenCentral()
		maven { url "https://repo.spring.io/milestone" }
		maven { url "https://plugins.gradle.org/m2/" }
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.0.M7")
		classpath("org.junit.platform:junit-platform-gradle-plugin:1.1.0-M1")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.0")
		classpath("org.jetbrains.kotlin:kotlin-allopen:1.2.0")
		classpath("org.jetbrains.kotlin:kotlin-noarg:1.2.0")
	}


}

apply plugin: "war"
apply plugin: "org.springframework.boot"
apply plugin: "org.junit.platform.gradle.plugin"

apply plugin: "org.jetbrains.kotlin.jvm"
apply plugin: "kotlin-spring"
apply plugin: "kotlin-jpa"
apply plugin: "io.spring.dependency-management"


version = "0.1.0"

sourceCompatibility = 1.8
targetCompatibility = 1.8


// generates war file
war {
	enabled = true
	archiveName = "multi-exchange-api.war"
	version = "0.1.0"
}

// generates the war file and copies it to the local tomcat server
task localDeploy (dependsOn: war){
	copy {
		from "build/libs"
		into "/var/lib/tomcat8/webapps"
		include "*.war"
	}
}

springBoot {
	mainClassName = "at.chaoticbits.DevApplication"
}



repositories {
	jcenter()
	mavenCentral()
	maven { url "http://repo.spring.io/milestone" }
	maven { url "https://dl.bintray.com/kotlin/kotlinx/" }
	maven { url "https://dl.bintray.com/kotlin/exposed/" }
	maven { url "https://oss.sonatype.org/content/repositories/snapshots"}
}

dependencies {

	// exchanges
	compile("org.knowm.xchange:xchange-core:4.3.2-SNAPSHOT")
	compile("org.knowm.xchange:xchange-poloniex:4.3.2-SNAPSHOT")
	compile("org.knowm.xchange:xchange-kraken:4.3.2-SNAPSHOT")
	compile("org.knowm.xchange:xchange-bittrex:4.3.2-SNAPSHOT")
	compile("org.knowm.xchange:xchange-binance:4.3.2-SNAPSHOT")
	compile("org.knowm.xchange:xchange-liqui:4.3.2-SNAPSHOT")

	// spring
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("org.springframework.boot:spring-boot-starter-data-rest")
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile("org.springframework.boot:spring-boot-starter-websocket")

	// jetbrains
	compile("org.jetbrains.kotlin:kotlin-stdlib")
	compile("org.jetbrains.kotlin:kotlin-reflect")
	compile("org.jetbrains.exposed:exposed:0.8")
	compile("org.jetbrains.kotlinx:kotlinx-coroutines-core:0.19.2")

	// misc
	compile("mysql:mysql-connector-java")

	// test
	testCompile("org.springframework.boot:spring-boot-starter-test") { exclude module: "junit" }
	testCompile("org.jetbrains.kotlin:kotlin-test-junit")

	// needed to generated deploy able war file
	providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
}
